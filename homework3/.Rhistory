StuDF
StuList
StuDF[4,c("成績")]
StuDF
StuList
Vector1 <- letters[1:6]
Vector1
names(Vector1)
library(httr)
install.packages("httr")
library(httr)
exhibitionList <- content(GET("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6"))
str(exhibitionList[[1]])
numExhibitions <- length(exhibitionList)
# numExhibitions
numExhibitions <- length(exhibitionList)
numExhibitions
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
loss1Companies <- as.character("營業利益（損失）" < 0)
# loss1Companies
loss1Companies <- as.character("營業利益（損失）" < 0)
# loss1Companies
"營業利益（損失）" < 0
loss1Companies <- as.character("營業利益（損失）" < 0)
# loss1Companies
loss1Companies <- as.character("營業利益（損失）" < 0)
loss1Companies
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
ymd_hms(訂單時區之下單時間$訂單時間)
ymd_hms(invoiceList$訂單時區之下單時間)
ymd_hms(invoiceList$'訂單時區之下單時間'[tpLogical],tz="Taiwan/Taipei")
names(invoiceList) <-
c('訂單時區','訂單時間')
ymd_hms(invoiceList$'訂單時區之下單時間'[tpLogical],tz="Taiwan/Taipei") <- tpDatetime
names(invoiceList) <-
c('訂單時間(以訂單時區顯示)','訂單時區之下單時間')
ymd_hms(invoiceList$'訂單時區之下單時間'[tpLogical],tz="Taiwan/Taipei") <- tpDatetime
ymd_hms(invoiceList$'訂單時區之下單時間'[tpLogical],tz="Taiwan/Taipei") <- tpDatetime
knitr::opts_chunk$set(echo = TRUE)
library(stringr); library(lubridate)
date_convert_twYM <- function(x){
yyyy<-as.integer(str_extract(x,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(x,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
y <- ymd(yyyymmdd)
return(y)
}
date_convert_twYM
library(stringr); library(lubridate)
date_convert_twYM <- function(x){
yyyy<-as.integer(str_extract(x,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(x,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
y <- ymd(yyyymmdd)
return(y)
}
date_convert_twYM
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
date_convert_twYM <- function(twDates){
#twDates
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
return(yyyymmdd)
}
utility_cobb_douglass <- function(x,y,.alpha,.beta){
utilValue <- x^.alpha*y^.beta # 程序產生output值
return(utilValue) # 傳回output值
}
class(utility_cobb_douglass)
utility_cobb_douglass(1,2,0.5,0.8)
utility_cobb_douglass(1,2)
utility_cobb_douglass(1,2,0.5,0.8)
utility_cobb_douglass(1,2,0.5,0.8)
date_convert_twYM <- function(twDates,dd="01"){
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,dd,sep="-"))
yyyymmdd
}
library(lubridate); library(stringr); library(purrr); library(readr);
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
oneCommitRecord <- commitHistory[10]
oneCommitRecord
oneCommitRecord <- commitHistory[[10]]
oneCommitRecord
commit_df_fun <- function(oneCommitRecord){return(df_commit)}
commit_df_fun
oneCommitRecord <- commitHistory[[10]]
oneCommitRecord
knitr::opts_chunk$set(echo = TRUE)
now2 <- function(){
currentDateTime <- Sys.time()
hh<-hour(currentDateTime)
mm<-minute(currentDateTime)
cat("現在是",hh,"點",mm,"分")
}
now2()
library(lubridate)
now2 <- function(){
currentDateTime <- Sys.time()
hh<-hour(currentDateTime)
mm<-minute(currentDateTime)
cat("現在是",hh,"點",mm,"分")
}
now2()
now2() -> xx
browseURL("https://www.ntpu.edu.tw")
textbookURL <- function(){
browseURL("https://bookdown.org/tpemartin/ntpu-programming-for-data-science/")
}
browseURL("https://www.ntpu.edu.tw")
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun2 <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(
list(
平均成績=GPA,
成績單=subSample
)
)
}
gpa_fun2("92aS67fee") -> outputValue
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
date_convert_twYM <- function(twDates,dd="01"){
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,dd,sep="-"))
yyyymmdd
}
library(lubridate)
now2 <- function(){
currentDateTime <- Sys.time()
hh<-hour(currentDateTime)
mm<-minute(currentDateTime)
cat("現在是",hh,"點",mm,"分")
}
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun2 <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(
list(
平均成績=GPA,
成績單=subSample
)
)
}
gpa_fun2("92aS67fee") -> outputValue
outputValue$平均成績
outputValue$成績單
demand_supply_fun <- function(P,a,b,c,d){
QS <- a + b*P
QD <- c - d*P
return(
list(
供給量 = QS,
需求量 = QD,
超額供給量 = QS - QD
)
)
}
a <- readline(prompt = "請輸入一個數字： ")
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
x <- as.character(round(runif(10)*100),10)
x
logicBig <- x > 50
logicBig
logicBig <- as.integer(x) > 50
logicBig
compoundObject <- list(1,"hello",TRUE)
compoundObject
load("submitTime.Rda")
nyTime_ <- with_tz(submitTime,tzone="America/New_York")
install.packages("lubridate")
nyTime <- with_tz(submitTime,tzone="America/New_York")
nyTime <- with_tz(submitTime,tzone="America/New_York")
aLogical <- c(T,TRUE,F,FALSE,FALSE)
class(aLogical)
studentMajors <- factor(
c("經濟系", "經濟系", "法律系")
)
typeof(studentMajors)
levels(studentMajors)
a <- list(
學號=c("a23","a22","a41"),
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
a <- list(
學號=c("a23","a22","a41"),
nyTime <- with_tz(submitTime,tzone="America/New_York")
passData <- map(data3,~. >= 60)
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
twDates2 <- str_replace("民國", )
twDates2 <- str_replace("民國"," ")
twDates2 <- str_replace("民國","")
twDates2 <- str_replace("民國",)
twDates2 <- str_replace(twDates2,"民國",)
twDates2 <- str_replace(twDates,"民國",)
twDates2 <- str_replace(twDates,"民國"," ")
twDates2
twDates2 <- str_replace(twDates,"民國","")
twDates2
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) # 取出每個元素第二位
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) # 取出每個元素第二位
map(a,~.[c(1,3)]) # 取出每個元素第一及第三位
map(a,~.[c(T,F,T)]) # 取出每個元素第一及第三位
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) # 取出每個元素第二位
map(a,~.[c(1,3)]) # 取出每個元素第一及第三位
map(a,~.[c(T,F,T)]) # 取出每個元素第一及第三位
load("submitTime.Rda")
View(transcriptDataFinal)
View(submitTime)
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
mdy_hms(submitTime) -> submitTime1
x <- as.character(round(runif(10)*100),10)
x
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
x <- as.character(round(runif(10)*100),10)
x
logicBig <- as.integer(x) > 50
logicBig
compoundObject <- list(1,"hello",TRUE)
compoundObject
load("submitTime.Rda")
nyTime <- with_tz(submitTime,tzone="America/New_York")
mdy_hms(submitTime) -> submitTime1
nyTime <- with_tz(submitTime1,tzone="America/New_York")
as.character(nyTime) -> nyTime
nyTime
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) # 取出每個元素第二位
map(a,~.[c(1,3)]) # 取出每個元素第一及第三位
map(a,~.[c(T,F,T)]) # 取出每個元素第一及第三位
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
pass <- data3$成績 >= 60
passData <- map(data3,~.[pass])
passData
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
twDates2 <- str_replace(twDates,"民國","")
twDates2 <- str_replace(twDates,"月","")
twDates2
twDates1 <- str_replace(twDates,"民國","")
twDates2 <- str_replace(twDates1,"月","")
twDates2
twDates1 <- str_replace(twDates,"民國","")
twDates2 <- str_replace(twDates1,"月","")
twDates2
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
str_split(twDates2,年)
str_split(twDates2,"年")
westYears
str_split(twDates2,"年") -> y
y
as.integer(y)
str_split(twDates2,"年") -> y
y[1] -> yy
as.integer(y)
str_split(twDates2,"年") -> y
y[1] -> yy
as.integer(yy) -> yy
str_split(twDates2,"年") -> y
y[1] -> yy
westYears <- as.integer(yy)+1911
str_split(twDates2,"年") -> y
y[1] -> yy
westYears <- as.integer(yy)+1911
load("invoiceList.Rda")
str(invoiceList)
str_split(twDates2,"年") -> y
y[[1]] -> yy
westYears <- as.integer(yy)+1911
westYears
str_split(twDates2,"年") -> dateList
map(dateList,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
westYears
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
str_split(twDates2,"年") -> dateList
map(dateList,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
View(yy)
westYears
str_split(twDates2,"年") -> dateList
map(dateList,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
View(yy)
westYears
str_split(twDates2,"年") -> dateList
map(dateList,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
westYears
str_split(twDates2,"年") -> y
y[[1]] -> yy
westYears <- as.integer(yy)+1911
westYears
twDates2 <- str_remove_all(twDates, "[民國月]")
twDates2 <- str_remove_all(twDates, "[民國月]")
twDates2
str_split(twDates2,"年") -> y
map(y,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
westYears
str_split(twDates2,"年") -> y
map(yy,~.[1])
westYears <- as.integer(yy)+1911
westYears
str_split(twDates2,"年") -> y
map(yy,~.[1])
westYears <- as.integer(yy)+1911
westYears
str_split(twDates2,"年") -> y
yy <- y[[1]]
map_int(yy, ~.+1911) -> westYears
str_split(twDates2,"年") -> y
map(y,~.[1]) -> yy
westYears <- as.integer(yy)+1911
westYears
str_split(twDates2,"年") -> y
yy <- y[1]
map_int(yy, ~.+1911) -> westYears
str_split(twDates2,"年") -> y
map(y,~.[1]) -> yy
westYears <- as.integer(yy)+1911
westYears
str_c(twDates,1) -> dd
twDates
westDates
str_c(twDates,1) -> dd
dd
twDates
westDates
str_c(twDates,1) -> dd
ymd(dd)
twDates
westDates
str_c(twDates,1) -> dd
ymd(dd) -> ddd
twDates
westDates
str_c(twDates,1) -> dd
ymd(dd) -> ddd
ddd
twDates
westDates
str_c(twDates,"1日") -> dd
dd
ymd(dd) -> ddd
twDates
westDates
str_c(twDates,"1日") -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
str_replace(twDates2,[[1:3]]) -> nomin
str_replace(twDates2,[1:3]) -> nomin
str_c(twDates,"1日") -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
str_split(twDates2,"年") -> y
y
yy <- y[[1]]
map_int(yy, ~.+1911) -> westYears
str_split(twDates2,"年") -> y
y
map(y,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
westYears
str_split(twDates2,"年") -> y
map(y,~.[1]) -> yy
westYears <- as.integer(yy)+1911
westYears
ymd(str_c(y[[1]],y[[2]],1)) -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
ymd(str_c(y[1],y[2],1)) -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
str_c(y[[1]],y[[2]],1) -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
map(y,~.[2]) -> mm
str_c(yy,"-",mm,"-",1) -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> ddd
ddd
twDates
westDates
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> ddd
ddd
westDates
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> westDates
westDates
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> westDates
westDates
class(westDates)
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> westDates
westDates
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> westDates
westDates
View(westDates)
map(y,~.[2]) -> mm
str_c(westYears,"-",mm,"-",1) -> dd
dd
ymd(dd) -> westDates
westDates
load("invoiceList.Rda")
str(invoiceList)
