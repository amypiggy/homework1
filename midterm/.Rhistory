knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
x <- as.character(round(runif(10)*100),10)
x
x <- as.character(round(runif(10)*100),10)
x
compoundObject <- list(1,"hello",TRUE)
compoundObject
z
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
z <- 1+3
z <- 1+3
x <- 2
c <- 3
v <- 4
z
z <- 1
z <- 1
x <- 2
c <- 3
v <- 4
z
z+x
z<x
z=x
z <- 1
x <- 2
c <- 3
v <- 4
z=x
z <- 1
x <- 2
c <- 3
v <- 4
z=x
z
z==x
x=1
x
x==z
x
x <- list(1,2,3)
x
x[[2]]
x[2]
x[[2]]
x <- list(1,2,3)
x[[2]]
x[2]
x <- list(1,2,3)
x[[2]]
x[2]
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1,3,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
knitr::opts_chunk$set(echo = TRUE)
plasticContainer[c("greenBox","redBox")]
plasticContainer[c(1,2)]
plasticContainer[c("greenBox","redBox")]
plasticContainer[1]
plasticContainer <- list(
greenBox=c("paper","scissor",x),     # location 1
x = 33333
redBox=c(1,3,2.5),               # location 2
plasticContainer <- list(
greenBox=c("paper","scissor",x),     # location 1
redBox=c(1,3,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1,3,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
plasticContainer[c("greenBox","redBox")]
plasticContainer[1]
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
compoundObject <- list(1,"hello",TRUE)
compoundObject
load("submitTime.Rda")
load("submitTime.Rda")
Sys.timezone()
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
randomCredits
grade <- randomGrades >= 60
passData <- list()
# passData
grade <- randomGrades >= 60
grade
passData <- list()
# passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- list()
# passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- list(成績=grade,學分數=randomCredits)
# passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- list(成績=grade,學分數=randomCredits)
passData
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
install.packages("lubridate")
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
install.packages("dplyr")
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
install.packages("readr")
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
randomCredits
grade <- randomGrades >= 60
randomGrades
grade
passData <- list(成績=grade,學分數=randomCredits)
passData
grade <- randomGrades >= 60
randomGrades
grade
#passData <- map(grade,~,)
passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(randomGrades,~,[c(grade)])
grade <- randomGrades >= 60
randomGrades
grade
as.list(grade)
passData <- map(randomGrades,~,[c(grade)])
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(randomGrades,~,[as.list(grade)])
grade <- randomGrades >= 60
randomGrades
grade
y<- as.list(grade)
y
passData <- map(randomGrades,~,[c(grade)])
grade <- randomGrades >= 60
randomGrades
grade
y<- as.list(grade)
y
passData <- map(randomGrades,~,[y])
grade <- randomGrades >= 60
randomGrades
grade
y<- as.list(grade)
y
passData <- map(randomGrades,~,[c(y)])
grade <- randomGrades >= 60
randomGrades
grade
y<- as.list(grade)
y
passData <- map(randomGrades,~,[c(grade)])
passData <- map(randomGrades,~,y)
#grade <- randomGrades >= 60
#randomGrades
#grade
#y<- as.list(grade)
#y
passLogic <- data3$成績>=60
passlogic
#grade <- randomGrades >= 60
#randomGrades
#grade
#y<- as.list(grade)
#y
passLogic <- data3$成績>=60
passLogic
passData <- map(randomGrades,~,y)
grade <- randomGrades >= 60
randomGrades
grade
y<- as.list(grade)
y
passData <- map(randomGrades,~.[y])
grade <- randomGrades >= 60
randomGrades
grade
y<- as.list(grade)
y
passData <- map(randomGrades,~.[grade])
passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(randomGrades,~.[grade])
passData
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
randomCredits
data3
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(randomGrades,[grade])
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(randomGrades,grade)
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(data3,~.[grade])
passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(data3,1.[grade])
passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(data3,1:2.[grade])
passData
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(data3,1~1.[grade])
grade <- randomGrades >= 60
randomGrades
grade
passData <- map(data3,~.[grade])
passData
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")[[1]]
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")[[1,1]]
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")[[[1]]]
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")[[1]]
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
map(dates,~.[[1]])
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]])
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]])
class(%)
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
as.integer(amy2)
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
as.integer(amy2)
amy2+2
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
class(as.integer(amy2))
amy2+2 -> amy3
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
class(as.integer(amy2))
amy2+~2 -> amy3
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
class(as.integer(amy2))
amy2 + 2 -> amy3
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
class(as.integer(amy2))
c(amy2) + 2 -> amy3
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-") -> amy
map(amy,~.[[1]]) -> amy2
class(amy2)
as.integer(amy2)+2 -> amy3
amy3
str_split(twDates2,"年") -> dateList
str_replace(twDates,"民國","") -> twDates2
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
str_replace(twDates,"民國","") -> twDates2
str_replace(twDates2,"月","") -> twDates2
twDates2
str_split(twDates2,"年") -> dateList
map(dateList,~.[[1]]) -> yy
as.integer(yy)+1911 -> westYears
westYears
# westYears
years <- c("年")
westYears
str_c(westYears,years())
# westDates
years <- c("年")
westYears
str_c(westYears,years)
# westDates
